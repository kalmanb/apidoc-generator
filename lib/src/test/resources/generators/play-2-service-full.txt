/**
 * Generated by apidoc - http://www.apidoc.me
 * Service version: 0.0.1-dev
 */

package services

import javax.inject.Inject

import com.typesafe.config.Config

import play.api.mvc.Request
import scala.concurrent.Future
import scala.util.Try

class EchoesService @Inject() (config: Config) {
  import com.bryzek.apidoc.reference.api.v0.models._
  import com.bryzek.apidoc.reference.api.v0.kafka._
  import play.api.libs.concurrent.Execution.Implicits.defaultContext
  
  
  def get[T](
    request: Request[T],
    foo: _root_.scala.Option[String] = None,
    optionalMessages: _root_.scala.Option[Seq[String]] = None,
    requiredMessages: Seq[String]
  ): Future[Try[Unit]] = {
    Future {
      Try { Unit }
    }
  }

  def get[T](
    request: Request[T],
    optionalMessages: _root_.scala.Option[Seq[String]] = None,
    requiredMessages: Seq[String]
  ): Future[Try[Unit]] = {
    Future {
      Try { Unit }
    }
  }
}